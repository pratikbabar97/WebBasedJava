package com.recipe.service;

import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.recipe.dto.RecipeDto;
import com.recipe.entities.Recipe;
import com.recipe.entities.User;
import com.recipe.exceptions.ResourceNotFoundException;
import com.recipe.repository.RecipeRepository;
import com.recipe.repository.UserRepository;

@Service
@Transactional
public class RecipeService {
	@Autowired
	private RecipeRepository recipeRepository;

	@Autowired
	private UserRepository userRepository;
	@Autowired
	private ModelMapper mapper;

	public List<RecipeDto> getAllRecipes() {

		return recipeRepository.findAll()
				.stream()
				.map(entity -> mapper.map(entity, RecipeDto.class))
				.collect(Collectors.toList());
	}

	public RecipeDto getRecipe(Long id) {
		if(recipeRepository.existsById(id)) {
			return mapper.map(recipeRepository.findById(id), RecipeDto.class);
			
		}
		throw new ResourceNotFoundException("invalid id");
		
	}
	
	public RecipeDto addRecipe(RecipeDto recipeDto) {
		User user= recipeRepository.findByName(recipeDto.getUser().getName());
		Recipe recipe=mapper.map(recipeDto, Recipe.class);
		recipe.setUser(user);
	}
	

}
