 package com.app.dao;

import com.app.entities.Users;
import static com.app.utils.HibernateUtils.getFactory;

import java.io.Serializable;

import org.hibernate.*;
public class UserDaoImpl implements UserDao {
	  //no datamembers,no cotr , n clean up
	String message="user registration failed !!";
	@Override
	public String registerUser(Users user) {
		
		// user:state-transient 
		//get the session  from SF
 		
		Session session=getFactory().openSession();
		Session session2=getFactory().openSession();
		System.out.println("session==session2");//false
		 //begin a transc
		Transaction tx=session.beginTransaction();//db conn is pooled out and wrapped in session obj created and L1 cache created
		System.out.println("session is open"+session.isOpen()+"is db connected"+session.isConnected());
		
		
		try {
			//org.hibernate.Session APi :public Serializable save(Object transientObjRef) throws HibernateException 
			Serializable userId = session.save(user);//user ref is added into cache:PerSistent pojo
			message="user registrated succefully with id="+userId;
			tx.commit();// upon commit :Hibernate performs:"Auto dirty checking ": by comparing state pf L1 cache with that of database : and in the end DML query(insert) will be fired 
			
		}catch(RuntimeException e) {
			if(tx!=null)
				tx.rollback();
			throw e;
			
		} finally {
			if(session!=null)
				session.close();//pooled out DB connc returns to the pool and L1 cache memo cleared
			
		}

		return message;
	}

}
